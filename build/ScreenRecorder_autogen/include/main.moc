/****************************************************************************
** Meta object code from reading C++ file 'main.cpp'
**
** Created by: The Qt Meta Object Compiler version 68 (Qt 6.4.2)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <memory>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'main.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 68
#error "This file was generated using the moc from 6.4.2. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

#ifndef Q_CONSTINIT
#define Q_CONSTINIT
#endif

QT_BEGIN_MOC_NAMESPACE
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
namespace {
struct qt_meta_stringdata_ScreenRecorder_t {
    uint offsetsAndSizes[30];
    char stringdata0[15];
    char stringdata1[26];
    char stringdata2[1];
    char stringdata3[17];
    char stringdata4[11];
    char stringdata5[16];
    char stringdata6[4];
    char stringdata7[15];
    char stringdata8[15];
    char stringdata9[5];
    char stringdata10[17];
    char stringdata11[12];
    char stringdata12[12];
    char stringdata13[14];
    char stringdata14[16];
};
#define QT_MOC_LITERAL(ofs, len) \
    uint(sizeof(qt_meta_stringdata_ScreenRecorder_t::offsetsAndSizes) + ofs), len 
Q_CONSTINIT static const qt_meta_stringdata_ScreenRecorder_t qt_meta_stringdata_ScreenRecorder = {
    {
        QT_MOC_LITERAL(0, 14),  // "ScreenRecorder"
        QT_MOC_LITERAL(15, 25),  // "openWebcamSelectionDialog"
        QT_MOC_LITERAL(41, 0),  // ""
        QT_MOC_LITERAL(42, 16),  // "onWebcamSelected"
        QT_MOC_LITERAL(59, 10),  // "devicePath"
        QT_MOC_LITERAL(70, 15),  // "showContextMenu"
        QT_MOC_LITERAL(86, 3),  // "pos"
        QT_MOC_LITERAL(90, 14),  // "startRecording"
        QT_MOC_LITERAL(105, 14),  // "onAreaSelected"
        QT_MOC_LITERAL(120, 4),  // "rect"
        QT_MOC_LITERAL(125, 16),  // "onWindowSelected"
        QT_MOC_LITERAL(142, 11),  // "startFfmpeg"
        QT_MOC_LITERAL(154, 11),  // "captureRect"
        QT_MOC_LITERAL(166, 13),  // "stopRecording"
        QT_MOC_LITERAL(180, 15)   // "showAboutDialog"
    },
    "ScreenRecorder",
    "openWebcamSelectionDialog",
    "",
    "onWebcamSelected",
    "devicePath",
    "showContextMenu",
    "pos",
    "startRecording",
    "onAreaSelected",
    "rect",
    "onWindowSelected",
    "startFfmpeg",
    "captureRect",
    "stopRecording",
    "showAboutDialog"
};
#undef QT_MOC_LITERAL
} // unnamed namespace

Q_CONSTINIT static const uint qt_meta_data_ScreenRecorder[] = {

 // content:
      10,       // revision
       0,       // classname
       0,    0, // classinfo
       9,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags, initial metatype offsets
       1,    0,   68,    2, 0x08,    1 /* Private */,
       3,    1,   69,    2, 0x08,    2 /* Private */,
       5,    1,   72,    2, 0x08,    4 /* Private */,
       7,    0,   75,    2, 0x08,    6 /* Private */,
       8,    1,   76,    2, 0x08,    7 /* Private */,
      10,    1,   79,    2, 0x08,    9 /* Private */,
      11,    1,   82,    2, 0x08,   11 /* Private */,
      13,    0,   85,    2, 0x08,   13 /* Private */,
      14,    0,   86,    2, 0x08,   14 /* Private */,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void, QMetaType::QString,    4,
    QMetaType::Void, QMetaType::QPoint,    6,
    QMetaType::Void,
    QMetaType::Void, QMetaType::QRect,    9,
    QMetaType::Void, QMetaType::QRect,    9,
    QMetaType::Void, QMetaType::QRect,   12,
    QMetaType::Void,
    QMetaType::Void,

       0        // eod
};

Q_CONSTINIT const QMetaObject ScreenRecorder::staticMetaObject = { {
    QMetaObject::SuperData::link<QWidget::staticMetaObject>(),
    qt_meta_stringdata_ScreenRecorder.offsetsAndSizes,
    qt_meta_data_ScreenRecorder,
    qt_static_metacall,
    nullptr,
    qt_incomplete_metaTypeArray<qt_meta_stringdata_ScreenRecorder_t,
        // Q_OBJECT / Q_GADGET
        QtPrivate::TypeAndForceComplete<ScreenRecorder, std::true_type>,
        // method 'openWebcamSelectionDialog'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'onWebcamSelected'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        QtPrivate::TypeAndForceComplete<const QString &, std::false_type>,
        // method 'showContextMenu'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        QtPrivate::TypeAndForceComplete<const QPoint &, std::false_type>,
        // method 'startRecording'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'onAreaSelected'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        QtPrivate::TypeAndForceComplete<const QRect &, std::false_type>,
        // method 'onWindowSelected'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        QtPrivate::TypeAndForceComplete<const QRect &, std::false_type>,
        // method 'startFfmpeg'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        QtPrivate::TypeAndForceComplete<const QRect &, std::false_type>,
        // method 'stopRecording'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'showAboutDialog'
        QtPrivate::TypeAndForceComplete<void, std::false_type>
    >,
    nullptr
} };

void ScreenRecorder::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        auto *_t = static_cast<ScreenRecorder *>(_o);
        (void)_t;
        switch (_id) {
        case 0: _t->openWebcamSelectionDialog(); break;
        case 1: _t->onWebcamSelected((*reinterpret_cast< std::add_pointer_t<QString>>(_a[1]))); break;
        case 2: _t->showContextMenu((*reinterpret_cast< std::add_pointer_t<QPoint>>(_a[1]))); break;
        case 3: _t->startRecording(); break;
        case 4: _t->onAreaSelected((*reinterpret_cast< std::add_pointer_t<QRect>>(_a[1]))); break;
        case 5: _t->onWindowSelected((*reinterpret_cast< std::add_pointer_t<QRect>>(_a[1]))); break;
        case 6: _t->startFfmpeg((*reinterpret_cast< std::add_pointer_t<QRect>>(_a[1]))); break;
        case 7: _t->stopRecording(); break;
        case 8: _t->showAboutDialog(); break;
        default: ;
        }
    }
}

const QMetaObject *ScreenRecorder::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *ScreenRecorder::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_ScreenRecorder.stringdata0))
        return static_cast<void*>(this);
    return QWidget::qt_metacast(_clname);
}

int ScreenRecorder::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QWidget::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 9)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 9;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 9)
            *reinterpret_cast<QMetaType *>(_a[0]) = QMetaType();
        _id -= 9;
    }
    return _id;
}
QT_WARNING_POP
QT_END_MOC_NAMESPACE
